class Solution {
    // Function to return a list containing the DFS traversal of the graph.
    private void helper(int node, List<Integer> ans, boolean[] vis, ArrayList<ArrayList<Integer>> adj) {
        vis[node] = true;
        ans.add(node);
        
        for (int it : adj.get(node)) {
            if (!vis[it]) {
                helper(it, ans, vis, adj);
            }
        }
    }
    public ArrayList<Integer> dfs(ArrayList<ArrayList<Integer>> adj) {
        // Code here
        int n = adj.size();
        boolean[] vis = new boolean[n];
        ArrayList<Integer> ans = new ArrayList<>();
        helper(0, ans, vis, adj);
        return ans;
    }
}
