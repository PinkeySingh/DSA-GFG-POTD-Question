class Solution {
    
    private static Boolean rec(int id,int arr[],int sum,Boolean dp[][]){
        if(sum==0) return true;
        if(id<0 || sum<0) return false;
        if(dp[id][sum]!=null) return dp[id][sum];
        Boolean p=rec(id-1,arr,sum-arr[id],dp);
        Boolean np=rec(id-1,arr,sum,dp);
        return dp[id][sum]=p || np;
    }

    static Boolean isSubsetSum(int arr[], int sum) {
        int n=arr.length;
        Boolean dp[][]=new Boolean[n][sum+1];
        return rec(n-1,arr,sum,dp);
    }
  
    static boolean equalPartition(int arr[]) {
        // code here
        int n = arr.length;
        int total=0;
        for(int i=0; i<n; i++){
            total+=arr[i];
        }
        if(total % 2!=0) return false;
        return isSubsetSum(arr, total/2);
        
    }
}
