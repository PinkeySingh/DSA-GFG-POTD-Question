class Solution {
    public static String smallestWindow(String s, String p) {
        // code here
        if (s.length() < p.length()) return "";

        int[] target = new int[26];
        for (char c : p.toCharArray()) {
            target[c - 'a']++;
        }

        int[] window = new int[26];
        int required = p.length();   
        int formed = 0;

        int left = 0, minLen = Integer.MAX_VALUE, start = -1;

        for (int right = 0; right < s.length(); right++) {
            char c = s.charAt(right);
            window[c - 'a']++;

            if (target[c - 'a'] > 0 && window[c - 'a'] <= target[c - 'a']) {
                formed++;
            }

            while (formed == required) {
            
                if (right - left + 1 < minLen) {
                    minLen = right - left + 1;
                    start = left;
                }

                char leftChar = s.charAt(left);
                window[leftChar - 'a']--;
                if (target[leftChar - 'a'] > 0 && window[leftChar - 'a'] < target[leftChar - 'a']) {
                    formed--; 
                }
                left++;
            }
        }

        return (start == -1) ? "" : s.substring(start, start + minLen);
    }
}
