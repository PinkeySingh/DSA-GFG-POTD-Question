class Solution {
     private int factorial(int n) {
        int res = 1;
        for (int i = 2; i <= n; i++) {
            res *= i;
        }
        return res;
    }
    public int vowelCount(String s) {
        // code here
        Map<Character, Integer> countMap = new HashMap<>();
        Set<Character> vowels = new HashSet<>(Arrays.asList('a', 'e', 'i', 'o', 'u'));
        
        for (char c : s.toCharArray()) {
            if (vowels.contains(c)) {
                countMap.put(c, countMap.getOrDefault(c, 0) + 1);
            }
        }
        
        int numVowels = countMap.size();
        if (numVowels == 0) return 0;
        
        int choices = 1;
        for (int freq : countMap.values()) {
            choices *= freq;
        }
        
        int permutations = factorial(numVowels);
        
        return choices * permutations;
    }
}
