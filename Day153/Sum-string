class Solution {
    
    private boolean checkSumString(String s, int start, String num1, String num2) {
        if (start == s.length()) return true;

        String sum = addStrings(num1, num2);
        int sumLength = sum.length();

        if (start + sumLength > s.length()) return false;
        String next = s.substring(start, start + sumLength);
        if (!next.equals(sum)) return false;

        return checkSumString(s, start + sumLength, num2, sum);
    }
    
     private boolean isValidNumber(String num) {
        return !(num.length() > 1 && num.startsWith("0"));
    }
    
    private String addStrings(String num1, String num2) {
        StringBuilder sb = new StringBuilder();
        int carry = 0, i = num1.length() - 1, j = num2.length() - 1;

        while (i >= 0 || j >= 0 || carry > 0) {
            int sum = carry;
            if (i >= 0) sum += num1.charAt(i--) - '0';
            if (j >= 0) sum += num2.charAt(j--) - '0';
            sb.append(sum % 10);
            carry = sum / 10;
        }

        return sb.reverse().toString();
    }

    public boolean isSumString(String s) {
        // code here
        int n = s.length();
        
        for (int i = 1; i <= n / 2; i++) {
            for (int j = 1; j <= (n - i) / 2; j++) {
                String num1 = s.substring(0, i);
                String num2 = s.substring(i, i + j);

                if (isValidNumber(num1) && isValidNumber(num2)) {
                    if (checkSumString(s, i + j, num1, num2)) {
                        return true;
                    }
                }
            }
        }
        return false;
    }
}
