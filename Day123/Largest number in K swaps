class Solution {
    // Function to find the largest number after k swaps.
    
     private void findMaximum(char[] arr, int k) {
        if (k == 0) return;

        int n = arr.length;

        for (int i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n; j++) {
                if (arr[j] > arr[i]) {
                    swap(arr, i, j);

                    String current = new String(arr);
                    if (current.compareTo(max) > 0) {
                        max = current;
                    }

                    findMaximum(arr, k - 1); 
                    swap(arr, i, j); 
                }
            }
        }
    }

    private void swap(char[] arr, int i, int j) {
        char temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }
    
    String max;
    public String findMaximumNum(String s, int k) {
        // code here.
         max = s;
        char[] arr = s.toCharArray();
        findMaximum(arr, k);
        return max;
    }
}
