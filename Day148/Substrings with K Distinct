class Solution {
    
    private int countAtMostK(String s, int k) {
        int left = 0, right = 0, result = 0;
        Map<Character, Integer> freq = new HashMap<>();

        for (right = 0; right < s.length(); right++) {
            char rightChar = s.charAt(right);
            freq.put(rightChar, freq.getOrDefault(rightChar, 0) + 1);

            while (freq.size() > k) {
                char leftChar = s.charAt(left);
                freq.put(leftChar, freq.get(leftChar) - 1);
                if (freq.get(leftChar) == 0) {
                    freq.remove(leftChar);
                }
                left++;
            }

            result += right - left + 1; 
        }

        return result;
    }
    
    int countSubstr(String s, int k) {
        // your code here
        return countAtMostK(s, k) - countAtMostK(s, k - 1);
    }
}
