class Solution {
    public Solution() {
         st = new Stack<>();
    }
    private int mini;
    private Stack<Integer> st;

    // Add an element to the top of Stack
    public void push(int x) {
        if (st.isEmpty()) {
            mini = x;
        } else if (x <= mini) {
            st.push(mini);
            mini = x;
        }
        st.push(x);
    }

    // Remove the top element from the Stack
    public void pop() {
        if (st.isEmpty()) return;
        int temp = st.pop();
        if (temp == mini && !st.isEmpty()) {
            mini = st.pop();
        }
    }

    // Returns top element of the Stack
    public int peek() {
        if (st.isEmpty()) return -1;
        return st.peek();
    }

    // Finds minimum element of Stack
    public int getMin() {
         if (st.isEmpty()) return -1;
        return mini;
    }
}
