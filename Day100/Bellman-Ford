class Solution {
    public int[] bellmanFord(int V, int[][] edges, int src) {
        
        int[] ans = new int[V];
        Arrays.fill(ans, (int)1e8);
        ans[src] = 0;

        for (int i = 0; i < V - 1; i++) {
            for (int[] edge : edges) {
                int u = edge[0];
                int v = edge[1];
                int wt = edge[2];

                if (ans[u] == (int)1e8) continue;

                if (ans[v] > ans[u] + wt) {
                    ans[v] = ans[u] + wt;
                }
            }
        }

        for (int[] edge : edges) {
            int u = edge[0];
            int v = edge[1];
            int wt = edge[2];

            if (ans[u] == (int)1e8) continue;

            if (ans[v] > ans[u] + wt) {
                return new int[]{-1}; 
            }
        }

        return ans;

    }
}
