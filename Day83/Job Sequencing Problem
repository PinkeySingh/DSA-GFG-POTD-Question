class Solution {

    public ArrayList<Integer> jobSequencing(int[] deadline, int[] profit) {
        int n = deadline.length;
        List<int[]> jobs = new ArrayList<>();
        
        for (int i = 0; i < n; i++) {
            jobs.add(new int[]{deadline[i], profit[i]});
        }
        
        jobs.sort(Comparator.comparingInt(a -> a[0]));
        
        PriorityQueue<Integer> pq = new PriorityQueue<>();
        int curr = 0, points = 0;
        
        for (int[] job : jobs) {
            if (job[0] > curr) {
                curr++;
                points += job[1];
                pq.add(job[1]);
            } else if (!pq.isEmpty() && job[1] > pq.peek()) {
                points -= pq.poll();
                points += job[1];
                pq.add(job[1]);
            }
        }
        
        ArrayList<Integer> result = new ArrayList<>();
        result.add(curr);
        result.add(points);
        return result;
    }
}
